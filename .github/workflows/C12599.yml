name: C12599

on:
  push:
    branches: [ "Storeapi" ]
  pull_request:
    branches: [ "Storeapi" ]

jobs:
  test:
    runs-on: ubuntu-latest
    services:
      mysql:
        image: mysql:latest
        ports:
          - 3306:3306
        options: >- 
          --health-cmd="mysqladmin ping --silent"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3
        env:
          MYSQL_ROOT_PASSWORD: 123456
          MYSQL_DATABASE: lab
          MYSQL_USER: root1
          MYSQL_PASSWORD: 123456

    steps:
      - uses: actions/checkout@v4
      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 8.0.x
      - name: Restore dependencies
        run: |
          cd Api
          dotnet restore
      - name: Build
        run: |
          cd Api
          dotnet build --no-restore
      - name: Test
        run: |
          cd Api
          dotnet test --no-build --verbosity normal

  publish-Api:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Build & Push Image
        run: |
          cd Api
          echo "${{ secrets.DOCKERHUBPASSC12599 }}" | docker login -u "marianoda20027@gmail.com" --password-stdin
          docker image build -t marianoda2002/storeapi:latest .
          docker push marianoda2002/storeapi:latest

  publish-ui:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Build & Push Image
        run: |
          cd UI
          echo "${{ secrets.DOCKERHUBPASSC12599 }}" | docker login -u "marianoda20027@gmail.com" --password-stdin
          docker image build -t marianoda2002/react:latest .
          docker push marianoda2002/react:latest

    
